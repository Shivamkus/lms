<!-- 
🎬 Video playlist UI Design like Skillshare With Vanilla JavaScript
👨🏻‍⚕️ By: Coding Design

You can do whatever you want with the code. However if you love my content, you can subscribed my YouTube Channel
🌎link: www.youtube.com/codingdesign
 -->

 <!DOCTYPE html>
 <html lang="en">
 
 <head>
     <meta charset="UTF-8">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <meta http-equiv="X-UA-Compatible" content="ie=edge">
     <title>Video Playlist UI Design Like Udemy | SkillShare</title>
     <!-- <link rel="stylesheet" href="style.css"> -->
     <style>/*
        🎬 Video playlist UI Design like Skillshare With Vanilla JavaScript
        👨🏻‍⚕️ By: Coding Design
        
        You can do whatever you want with the code. However if you love my content, you can subscribed my YouTube Channel
        🌎link: www.youtube.com/codingdesign
        */
        
        :root {
            --primary : linear-gradient(to bottom right, #3abfe0, #3f00ee);
            --secondary : gold;
            --text : #fff;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            /* min-height: 70vh; */
            /* background-image: var(--primary); */
            /* background:linear-gradient(135deg, #3abfe0, #3f00ee ); */
            background-color: #3abfe0;
            font-family: sans-serif;
            color: var(--text);
        
            /* display: flex; */
            /* align-items: center; */
        }
        
        .container {
            width: 80vw;
            display: grid;
            grid-template-columns: 1.8fr 1.2fr;
            gap: 1rem;
            
            padding: .5rem 1rem;
            text-transform: capitalize;
        }
        
        @media screen and (max-width: 990px) {
            .container {
                grid-template-columns: 1fr;
            }
        }
        
        .main-video, .video-playlist {
            width: 100%;
            height: 30rem;
        }
        .main-video {
            height: 40rem;
        }
        .video-playlist {
            background-color: #333;
            margin-right: -20px;
        }
        .main-video .title {
            margin-top: 1rem;
        }
        
        .video-playlist .title {
            padding-left: 1rem;
        }
        
        .video-playlist > p {
            padding: 1rem;
            color: var(--secondary);

        }
        
        .video-playlist .videos{
            margin-left: -20px;
            background-color: #333;
            height: 150%;
            overflow-y: auto;
        }
        
        .video-playlist .videos::-webkit-scrollbar {
            width: .4rem;
            border-radius: .4rem;
            background-color: #0005;
        }
        
        .video-playlist .videos::-webkit-scrollbar-thumb {
            border-radius: .4rem;
            background-color: #fff;
        }
        
        .video-playlist .videos .video {
            position: relative;
            width: 100%;
            height: 8rem;
        
            display: flex;
            justify-content: center;
            align-items: center;
        
            padding: 0 1rem;
            margin-top: .1rem;
            cursor: pointer;
        
            border-radius: .5rem;
        }
        
        .video-playlist .videos .video:hover {
            background-color: #0003;
        }
        
        .video-playlist .videos .video.active {
            background-color: #0003;
            color: var(--secondary);
        }
        
        .main-video video {
            width: 100%;
            border-radius: .5rem;
        }
        
        .video img {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            
            width: 1.5rem;
            height: 1.5rem;
            
            filter: invert(100%);
        }
        
        .video-playlist .videos .video.active img {
            filter: invert(100%) sepia(100%) saturate(2000%) hue-rotate(360deg);
        }
        
        .video p {
           margin-left: 2.5rem;
        }
        
        .video h3 {
            width: 23rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        
            font: 500 1.4rem sans-serif;
            padding: 0 .5rem;
        }
        </style>
 </head>
 
 <body>
     <main class="container">
            <section class="main-video">

             <video src="/uploads/videos/" controls autoplay muted></video>
             

         </section>
 
         <section class="video-playlist">
            
             <h3 class="title">Title of Video Playlist</h3>
             <p>10 lessions &nbsp; . &nbsp; 50m 48s</p>
             <div class="videos">
 
             </div>
         </section>
     </main>
     <script>

const main_video = document.querySelector('.main-video video');
const main_video_title = document.querySelector('.main-video .name');
const video_playlist = document.querySelector('.video-playlist .videos');

// Function to fetch video data from the API
async function fetchVideoData() {
  try {
    const response = await fetch('/api/');
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('Error fetching video data:', error);
    return [];
  }
}

// Function to update the video playlist with fetched data
async function updateVideoPlaylist() {
  const fetchedData = await fetchVideoData();

  fetchedData.forEach((video, i) => {
    let video_element = `
      <div class="video" data-id="${video._id}">
        <img src="uploads/images/play.svg" alt="">
        <p>${i + 1 > 9 ? i + 1 : '0' + (i + 1)}. </p>
        <h3 class="title">${video.name}</h3>
        <p class="title"> ${video.teacherName}</p>

      </div>
    `;
    video_playlist.innerHTML += video_element;
  });

  let videos = document.querySelectorAll('.video');
  videos[0].classList.add('active');
  videos[0].querySelector('img').src = 'uploads/images/pause.svg';

  videos.forEach(selected_video => {
    selected_video.onclick = async () => {
      for (all_videos of videos) {
        all_videos.classList.remove('active');
        all_videos.querySelector('img').src = 'uploads/images/play.svg';
      }

      selected_video.classList.add('active');
      selected_video.querySelector('img').src = 'uploads/images/pause.svg';

      let match_video = fetchedData.find(video => video._id == selected_video.dataset.id);
      main_video.src = 'uploads/videos/' + match_video.fileName;
      main_video_title.innerHTML = match_video.name;
    };
  });
}

// Call the function to update the video playlist on page load
updateVideoPlaylist();

     </script>
     <!-- <script src="script.js"></script> -->
 </body>
 
 </html>
 